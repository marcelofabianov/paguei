version: '3.7'

services:
    http:
        container_name: http
        image: nginx:latest
        restart: always
        ports:
            - "80:80"
        volumes:
            - ./public:/var/www/html/public
            - ./environments/local/http/default.conf:/etc/nginx/conf.d/default.conf
            - ./environments/local/http/log:/var/log/nginx
        networks:
            - app_network

    app:
        container_name: app
        image: marcelofabianov/php8.2-fpm-pgsql:latest
        restart: always
        working_dir: /var/www/html
        environment:
            PHP_IDE_CONFIG: "serverName=app"
            XDEBUG_CONFIG: remote_host=host.docker.internal
        volumes:
            - .:/var/www/html
            - ./environments/local/php/app/php.ini:/usr/local/etc/php/php.ini
        networks:
            - app_network
        depends_on:
            - db
            - redis
        ports:
            - '9000:9000'
            - '9003:9003'

    horizon:
        container_name: horizon
        image: marcelofabianov/php8.2-cli-pgsql:latest
        command: php artisan horizon
        restart: always
        working_dir: /var/www/html
        volumes:
            - .:/var/www/html
            - ./environments/local/php/horizon/php.ini:/usr/local/etc/php/php.ini
        networks:
            - app_network
        depends_on:
            - db
            - redis

    schedule:
        container_name: schedule
        image: marcelofabianov/php8.2-cli-pgsql:latest
        command: php artisan schedule:work
        restart: always
        working_dir: /var/www/html
        volumes:
            - .:/var/www/html
            - ./environments/local/php/schedule/php.ini:/usr/local/etc/php/php.ini
        networks:
            - app_network
        depends_on:
            - db
            - redis

    redis:
        container_name: redis
        image: redis:latest
        restart: always
        command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}" ]
        environment:
            REDIS_PASSWORD: '${REDIS_PASSWORD}'
        volumes:
            - 'redis:/data'
        networks:
            - app_network

    db:
        container_name: db
        image: postgres:15
        restart: always
        environment:
            POSTGRES_USER: '${DB_USERNAME:-user}'
            POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
            POSTGRES_DB: '${DB_DATABASE:-db}'
        volumes:
            - 'db:/var/lib/postgresql/data'
        ports:
            - "5432:5432"
        networks:
            - app_network

networks:
    app_network:
        driver: bridge

volumes:
    db:
        driver: local
    redis:
        driver: local
